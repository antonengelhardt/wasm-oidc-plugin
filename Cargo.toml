[package]
publish = false
name = "wasm-oidc-plugin"
version = "0.4.3"
authors = ["WWU Cloud Developer <cloud@uni-muenster.de>, Anton Engelhardt <antoncengelhardt@icloud.com>"]
description = "A plugin for the Envoy-Proxy written in Rust. It is a HTTP Filter, that implements the OIDC Authorization Code Flow. Requests sent to the filter are checked for the presence of a valid session cookie. If the cookie is not present, the user is redirected to the authorization_endpoint to authenticate. After successful authentication, the user is redirected back to the original request with a code in the URL query. The plugin then exchanges the code for a token using the token_endpoint and stores the token in the session. If the cookie is present, the plugin validates the token and passes the request to the backend, if the token is valid (optional)."
license = "Apache-2.0"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[dependencies]
# logging
log = "0.4.21"

# proxy-wasm
proxy-wasm = "0.2.1"

# json, yaml, url parsing
url = { version = "2.5.0", features = ["serde"] }
serde = { version = "1.0.199", features = ["derive"] }
serde_yaml = "0.9.33"
serde_json = "1.0.116"
serde_urlencoded = "0.7.1"

# base64
base64 = "0.22.0"

# regex
regex = "1.10.4"
serde_regex = "1.1.0"

# jsonwebtoken (forked version to support RSA keys longer than 4096 bits)
jwt-simple = {git = "https://github.com/antonengelhardt/rust-jwt-simple", rev = "b92ac707dab1f65fae00569a468793d5eb6dab22"}

# pkce
pkce = "0.2.0"

# aes256
aes-gcm = {version = "0.10.3", features = ["std"]}

# thiserror
thiserror = "1.0.58"
sec = { version = "1.0.0", features = ["serde", "deserialize"] }

[profile.release]
lto = true
opt-level = 3
codegen-units = 1
panic = "abort"
strip = "debuginfo"
