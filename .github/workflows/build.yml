name: Test and Build Wasm OIDC Plugin

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo-deny:
    runs-on: ubuntu-latest
    container:
      image: antonengelhardt/rust-docker-tools
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Rust version
        run: rustc --version && cargo --version

      - name: Cargo Deny
        uses: EmbarkStudios/cargo-deny-action@v1

  clippy:
    runs-on: ubuntu-latest
    container:
      image: antonengelhardt/rust-docker-tools
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rust version
        run: rustc --version && cargo --version

      - name: Clippy
        run: |
          rustc --version && cargo --version
          cargo clippy

  fmt:
    runs-on: ubuntu-latest
    container:
      image: antonengelhardt/rust-docker-tools
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rust version
        run: rustc --version && cargo --version

      - name: Fmt
        run: cargo fmt -- --check

  test:
    runs-on: ubuntu-latest
    container:
      image: antonengelhardt/rust-docker-tools
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rust version
        run: rustc --version && cargo --version

      - name: Test
        run: cargo test --workspace

  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/antonengelhardt/rust-docker-tools
    needs: [cargo-deny, clippy, fmt, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build WASM OIDC Plugin
        run: |
          cargo build --target wasm32-wasi --release

      - name: Upload plugin as artifact
        uses: actions/upload-artifact@v2
        with:
          name: plugin
          path: target/wasm32-wasi/release/wasm_oidc_plugin.wasm

  docker-image:
    name: Build and push Docker image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: antonengelhardt/wasm-oidc-plugin:latest

  ghcr-image:
    name: Build and push GHCR image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GHCR
        run: |
          docker pull ghcr.io/antonengelhardt/wasm-oidc-plugin:latest # Pull the image to cache
          docker build -t ghcr.io/antonengelhardt/wasm-oidc-plugin:latest .
          docker push ghcr.io/antonengelhardt/wasm-oidc-plugin:latest

  deploy-demo:
    name: Deploy to demo site
    needs: ghcr-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment wasm-oidc-plugin -n wasm-oidc-plugin
