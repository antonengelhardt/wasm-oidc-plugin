name: Test, build and document

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: zivgitlab.wwu.io/m_wiga01/rust-docker-tools/rust-docker-tools:latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Cache dependencies
  #       uses: actions/cache@v2
  #       with:
  #         path: target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  #     - name: Run tests
  #       run: |
  #         rustc --version && cargo --version
  #         cargo clippy
  #         cargo test --workspace --verbose

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   container:
  #     image: zivgitlab.wwu.io/m_wiga01/rust-docker-tools/rust-docker-tools:latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Build
  #       run: |
  #         cargo build --target wasm32-wasi --release

  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: wasm_oidc_plugin.wasm
  #         path: target/wasm32-wasi/release/wasm_oidc_plugin.wasm

  build-documentation:
    # needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install rustup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Generate documentation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --document-private-items --no-deps

      - name: Fix file permissions
        shell: sh
        run: |
          chmod -c -R +rX "target/doc" |
          while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Generate index.html file
        run: |
          echo "<meta http-equiv=refresh content=0;url=wasm_oidc_plugin/index.html>" > target/doc/index.html

      - name: Upload documentation
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./target/doc

      - name: Zip documentation
        run: |
          sudo apt-get update && sudo apt-get install -y zip
          cd target/doc
          zip -r docs .
          cd ../..

      - name: Archive documentation
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: target/doc/docs.zip

  deploy-documentation:
    needs: build-documentation
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.pages.outputs.page_url }}

    steps:
      - name: Deploy documentation
        id: pages
        uses: actions/deploy-pages@v2
